(deftheme geo-light-theme
  "Created 2016-07-05.")

(custom-theme-set-variables
 'geo-light-theme
 '(ansi-color-names-vector ["#0c0d0e" "#e31a1c" "#31a354" "#dca060" "#3182bd" "#756bb1" "#3182bd" "#b7b8b9"])
 '(battery-mode-line-limit 90)
 '(custom-safe-themes (quote ("8eeb8a60d588af66fca1be07913faf722c165c48904cd4cf45d7c11cca94ff11" "3b2ecfa8cb375377f8906d77fa59aa11bcbb1fdabbf362b8e8e6d58ca657be9f" "90c7657ca7ae586bff992e8ce2d20447dd343ef235f25cf4e4b228969750d66b" "8389282278e6febad73d5889c959a408053e42750d79bffd238ce641d7e5da49" "a0c61e07ac38bec833186b8f6b82caa005b00250d375bc410f0dd99de456cf63" "e0d6bf68ed6b52d6b4b22b4d7f1d09235c0cd96a9edfe12a67cfeed183d0a6f1" "fb417dca72f9b08777194a9e3a5b86da29dc42972194f91ed5aff4ef81c3c54b" "24acd771fd56cd61bd12732f2772275429f9d75bc12bc9f0bd3a268fddb6a645" "3f873e7cb090efbdceafb8f54afed391899172dd917bb7a354737a8bb048bd71" "3a3917dbcc6571ef3942c2bf4c4240f70b5c4bc0b28192be6d3f9acd83607a24" "a27c00821ccfd5a78b01e4f35dc056706dd9ede09a8b90c6955ae6a390eb1c1e" "38b536cbb5b15ae65c2d5a9a4d2e8deff9291a99ed6ab67cf51cf6a8b02b83ad" "a55ef8d8cb330dd324b70935dd1f41996ae7d892a9dd468596b156d216fda7e1" default)))
 '(evil-indent-convert-tabs t)
 '(ido-mode (quote (quote (quote (quote (quote both))))))
 '(indent-tabs-mode nil)
 '(initial-buffer-choice t)
 '(rich-minority-mode t)
 '(display-battery-mode t)
 '(fringe-mode (quote (quote (nil . 0))))
 '(menu-bar-mode nil)
 '(tool-bar-mode nil)
 '(global-hl-line-mode t))

(custom-theme-set-faces
 'geo-light-theme
 '(default ((t (:background "#fcfdfe" :foreground "#515253"))))
 '(fringe ((t (:background "gainsboro"))))
 '(mode-line ((t (:background "gold2" :foreground "black" :box nil))))
 '(mode-line-buffer-id ((t (:foreground "blue" :weight bold))))
 '(region ((t (:background "gray90"))))
 '(helm-selection ((t (:background "light steel blue" :distant-foreground "black"))))
 '(font-lock-comment-face ((t (:foreground "gray"))))
 '(highlight ((t (:background "gray93"))))
 '(flycheck-fringe-info ((t (:inherit success :inverse-video t))))
 '(flycheck-fringe-error ((t (:inherit error :inverse-video t))))
 '(flycheck-fringe-warning ((t (:inherit warning :inverse-video t))))
 '(border ((t (:background "#737475"))))
 '(link ((t (:foreground nil :underline t))))
 '(link-visited ((t (:foreground "#756bb1"))))
 '(minibuffer-prompt ((t (:foreground "#3182bd"))))
 '(error ((t (:foreground "#e31a1c" :weight bold))))
 '(warning ((t (:foreground "#e6550d" :weight bold))))
 '(success ((t (:foreground "#31a354" :weight bold))))
 '(header-line ((t (:inherit mode-line :foreground "#756bb1" :background nil))))
 '(font-lock-builtin-face ((t (:foreground "#80b1d3"))))
 '(font-lock-constant-face ((t (:foreground "#e6550d"))))
 '(font-lock-doc-face ((t (:foreground "#959697"))))
 '(font-lock-function-name-face ((t (:foreground "#3182bd"))))
 '(font-lock-keyword-face ((t (:foreground "#756bb1"))))
 '(font-lock-negation-char-face ((t (:foreground "#31a354"))))
 '(font-lock-preprocessor-face ((t (:foreground "#3182bd"))))
 '(font-lock-regexp-grouping-backslash ((t (:foreground "#dca060"))))
 '(font-lock-regexp-grouping-construct ((t (:foreground "#756bb1"))))
 '(font-lock-string-face ((t (:foreground "#31a354"))))
 '(font-lock-type-face ((t (:foreground "#dca060"))))
 '(font-lock-variable-name-face ((t (:foreground "#80b1d3"))))
 '(font-lock-warning-face ((t (:foreground "#e31a1c"))))
 '(match ((t (:foreground "#3182bd" :background "#2e2f30" :inverse-video t))))
 '(isearch ((t (:foreground "#dca060" :background "#2e2f30" :inverse-video t))))
 '(lazy-highlight ((t (:foreground "#80b1d3" :background "#2e2f30" :inverse-video t))))
 '(isearch-fail ((t (:background "#2e2f30" :inherit font-lock-warning-face :inverse-video t))))
 '(ido-subdir ((t (:foreground "#959697"))))
 '(ido-first-match ((t (:foreground "#e6550d" :weight bold))))
 '(ido-only-match ((t (:foreground "#e31a1c" :weight bold))))
 '(ido-indicator ((t (:foreground "#e31a1c" :background "#2e2f30"))))
 '(ido-virtual ((t (:foreground "#959697"))))
 '(trailing-whitespace ((t (:background "#80b1d3" :foreground "#dca060"))))
 '(show-paren-match ((t (:inherit success :inverse-video t))))
 '(show-paren-mismatch ((t (:inherit warning :inverse-video t))))
 '(diff-added ((t (:foreground "#31a354"))))
 '(diff-changed ((t (:foreground "#dca060"))))
 '(diff-removed ((t (:foreground "#e31a1c"))))
 '(diff-header ((t (:background "#2e2f30"))))
 '(diff-file-header ((t (:background "#515253"))))
 '(diff-hunk-header ((t (:background "#2e2f30" :foreground "#756bb1"))))
 '(eldoc-highlight-function-argument ((t (:foreground "#31a354" :weight bold))))
 '(undo-tree-visualizer-default-face ((t (:foreground "#dadbdc"))))
 '(undo-tree-visualizer-current-face ((t (:foreground "#31a354" :weight bold))))
 '(undo-tree-visualizer-active-branch-face ((t (:foreground "#e31a1c"))))
 '(undo-tree-visualizer-register-face ((t (:foreground "#dca060"))))
 '(widget-button ((t (:underline t))))
 '(widget-field ((t (:background "#737475" :box (:line-width 1 :color "#dadbdc")))))
 '(compilation-column-number ((t (:foreground "#dca060"))))
 '(compilation-line-number ((t (:foreground "#dca060"))))
 '(compilation-mode-line-exit ((t (:foreground "#31a354"))))
 '(compilation-mode-line-fail ((t (:foreground "#e31a1c"))))
 '(compilation-mode-line-run ((t (:foreground "#3182bd"))))
 '(markdown-url-face ((t (:inherit link))))
 '(markdown-link-face ((t (:foreground "#3182bd" :underline t))))
 '(message-header-other ((t (:foreground nil :background nil :weight normal))))
 '(message-header-subject ((t (:inherit message-header-other :weight bold :foreground "#dca060"))))
 '(message-header-to ((t (:inherit message-header-other :weight bold :foreground "#e6550d"))))
 '(message-header-cc ((t (:inherit message-header-to :foreground nil))))
 '(message-header-name ((t (:foreground "#3182bd" :background nil))))
 '(message-header-newsgroups ((t (:foreground "#80b1d3" :background nil :slant normal))))
 '(message-separator ((t (:foreground "#756bb1"))))
 '(helm-M-x-key ((t (:foreground "#80b1d3"))))
 '(helm-action ((t (:foreground "#b7b8b9"))))
 '(helm-buffer-directory ((t (:foreground "#959697" :background nil :weight bold))))
 '(helm-buffer-file ((t (:foreground "#80b1d3"))))
 '(helm-buffer-not-saved ((t (:foreground "#e31a1c"))))
 '(helm-buffer-process ((t (:foreground "#737475"))))
 '(helm-buffer-saved-out ((t (:foreground "#b15928"))))
 '(helm-buffer-size ((t (:foreground "#e6550d"))))
 '(helm-candidate-number ((t (:foreground "#0c0d0e" :background "#e6550d"))))
 '(helm-ff-directory ((t (:foreground "#959697" :background nil :weight bold))))
 '(helm-ff-executable ((t (:foreground "#31a354"))))
 '(helm-ff-file ((t (:foreground "#80b1d3"))))
 '(helm-ff-invalid-symlink ((t (:foreground "#0c0d0e" :background "#e31a1c"))))
 '(helm-ff-prefix ((t (:foreground nil :background nil))))
 '(helm-ff-symlink ((t (:foreground "#0c0d0e" :background "#80b1d3"))))
 '(helm-grep-cmd-line ((t (:foreground "#31a354"))))
 '(helm-grep-file ((t (:foreground "#80b1d3"))))
 '(helm-grep-finish ((t (:foreground "#0c0d0e" :background "#e6550d"))))
 '(helm-grep-lineno ((t (:foreground "#737475"))))
 '(helm-grep-match ((t (:foreground "#dca060"))))
 '(helm-header ((t (:foreground "#dca060" :background "#0c0d0e" :underline nil))))
 '(helm-match ((t (:foreground "#dca060"))))
 '(helm-moccur-buffer ((t (:foreground "#80b1d3"))))
 '(helm-separator ((t (:foreground "#515253"))))
 '(helm-source-header ((t (:foreground "#b7b8b9" :background "#2e2f30" :weight bold))))
 '(helm-visible-mark ((t (:foreground "#0c0d0e" :background "#31a354"))))
 '(custom-variable-tag ((t (:foreground "#3182bd"))))
 '(custom-group-tag ((t (:foreground "#3182bd"))))
 '(custom-state ((t (:foreground "#31a354")))))

(provide-theme 'geo-light-theme)
