" Copy or symlink to ~/.vimrc or ~/_vimrc.

set nocompatible                  " Must come first because it changes other options.
filetype off

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle
" required! 
Plugin 'gmarik/vundle'
Plugin 'tpope/vim-rails.git'
Plugin 'skalnik/vim-vroom'
Plugin 'kien/ctrlp.vim.git'
Plugin 'Shougo/neocomplcache.git'
Plugin 'scrooloose/nerdcommenter.git'
Plugin 'scrooloose/nerdtree.git'
Plugin 'msanders/snipmate.vim.git'
Plugin 'kchmck/vim-coffee-script.git'
Plugin 'tpope/vim-endwise.git'
Plugin 'tpope/vim-fugitive.git'
Plugin 'tpope/vim-markdown.git'
Plugin 'tpope/vim-surround.git'
Plugin 'tsaleh/vim-matchit'
Plugin 'godlygeek/tabular'
Plugin 'vimwiki'
Plugin 'moll/vim-bbye'
Plugin 'junegunn/vim-easy-align'
Plugin 'rking/ag.vim'
Plugin 'elixir-lang/vim-elixir'
call vundle#end()

" Use , instead of \ as a leader
let mapleader=','

" Edit vimrc file
nmap ,ec ;edit ~/bin/dotfiles/vim/vimrc<cr>

" Allow saving of files as sudo when I forgot to start vim using sudo.
cmap w!! w !sudo tee > /dev/null %

"tell the term has 256 colors
set t_Co=256

syntax enable                     " Turn on syntax highlighting.
filetype plugin indent on         " Turn on file type detection.

set showcmd                       " Display incomplete commands.
set showmode                      " Display the mode you're in.

set backspace=indent,eol,start    " Intuitive backspacing.

set hidden                        " Handle multiple buffers better.

set wildmenu                      " Enhanced command line completion.
set wildmode=list:longest         " Complete files like a shell.

set ignorecase                    " Case-insensitive searching.
set smartcase                     " But case-sensitive if expression contains a capital letter.

"set number                       " Show line numbers.
set relativenumber                " Show relative line numbers.
set ruler                         " Show cursor position.

set incsearch                     " Highlight matches as you type.
set hlsearch                      " Highlight matches.

set wrap                          " Turn on line wrapping.
set scrolloff=5                   " Show 3 lines of context around the cursor.
set sidescrolloff=7
set sidescroll=1
set linebreak                     " Don't allow words to be broken up in order to wrap

set title                         " Set the terminal's title

set visualbell                    " No beeping.

set nobackup                      " Don't make a backup before overwriting a file.
set nowritebackup                 " And again.
set directory=$HOME/.vim/tmp//,.  " Keep swap files in one location

set tabstop=2                    " Global tab width.
set shiftwidth=2                 " And again, related.
set expandtab                    " Use spaces instead of tabs
set smartindent                  " If the current line is indented, indent the next
set autoindent

" folding settings
set foldmethod=indent             " fold based on indent level
set foldnestmax=5                 " deepest fold is 3 levels
"set nofoldenable                  " dont fold by default
set foldenable                    " fold by default
set foldlevelstart=99             " When a file is opened, don't fold any folds

set formatoptions-=o              " dont continue comments when pushing o/O

set laststatus=2                  " Show the status line all the time
" Useful status information at bottom of screen
"set statusline=[%n]\ %<%.99f\ %h%w%m%r%y\ %{exists('*CapsLockStatusline')?CapsLockStatusline():''}%=%-16(\ %l,%c-%v\ %)%P
set statusline=[%n]\              " buffer number
set statusline+=%f\               " tail of the filename
set statusline+=%h                " help file flag
set statusline+=%y                " filetype
set statusline+=%r                " readonly flag
set statusline+=%m                " modified flag
set statusline+=%=                " left/right separator
set statusline+=line\ %l/%L,\       " cursor line/total lines
set statusline+=col\ %c,               " cursor column
set statusline+=\ %P              " percent through file

" on wrapped long lines, go to the next visual line, not code line
nnoremap j gj
nnoremap k gk

" use jj as <esc>
inoremap jj <esc>

" Easy window navigation
map <C-h> <C-w>h
map <C-j> <C-w>j
map <C-k> <C-w>k
map <C-l> <C-w>l

" Don't try to highlight lines longer than 800 characters.
set synmaxcol=800

" Resize splits when the window is resized
au VimResized * :wincmd =

" We have a fast terminal
set ttyfast


"=====[ Colors and Indicators ]================================================
    " colorscheme vividchalk
    colorscheme smyck
    " colorscheme topfunky-light
    " colorscheme solarized
    set background=dark

    "====[ Set the cursor background to a dark gray ]==========================
    " See http://www.pixelbeat.org/docs/terminal_colours/ for a list
    set cursorline
    highlight CursorLine term=NONE cterm=NONE ctermbg=233 ctermfg=NONE

    "====[ Make the 81st column stand out ]====================================
    highlight ColorColumn ctermbg=magenta
    call matchadd('ColorColumn', '\%81v', 100)

    "====[ Make tabs, trailing whitespace and nbsp visible ]===================
    "exec "set listchars=tab:\uBB\uBB,trail:\uB7,nbsp:~"
    highlight SpecialKey ctermbg=red
    exec "set listchars=trail:Â·"
    set list


" Tab mappings.
map <leader>tt ;tabnew<cr>
map <leader>te ;tabedit
map <leader>tc ;tabclose<cr>
map <leader>to ;tabonly<cr>
map <leader>tn ;tabnext<cr>
map <leader>tp ;tabprevious<cr>
map <leader>tf ;tabfirst<cr>
map <leader>tl ;tablast<cr>
map <leader>tm ;tabmove

" Open up NERDTree
map <leader>nt ;NERDTree<Enter>

" Options for CTRLp
let g:ctrlp_match_window_reversed = 1 " top to bottom

" Use Bdelete from bbye to delete a buffer without changing window setup
nnoremap <leader>q ;Bdelete<Enter>


" Automatic fold settings for specific files. Uncomment to use.
autocmd FileType ruby setlocal foldmethod=syntax
autocmd FileType css  setlocal foldmethod=indent shiftwidth=2 tabstop=2

" ============================================================================
" === Set up filetypes
:au BufRead,BufNewFile *.pago set filetype=pago
:au BufRead,BufNewFile *.daily set filetype=markdown textwidth=74


" ========================================================================
" === VimWiki
let g:vimwiki_list = [{'path': "$HOME/Dropbox/Documents/vimwiki/", 'syntax': 'markdown', 'ext': '.mkd'}]
"let g:vimwiki_ext2syntax = {'.md': 'markdown', '.mkd': 'markdown', '.wiki': 'default'}
"let g:vimwiki_global_ext = 0

" Controversial...swap colon and semicolon for easier commands
nnoremap ; :
nnoremap : ;
vnoremap ; :
vnoremap : ;
